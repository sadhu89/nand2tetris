// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

        PARTS:
        DMux8Way(in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
        RAM8(in=in, load=a, out=outA, address=address[0..2]);
        RAM8(in=in, load=b, out=outB, address=address[0..2]);
        RAM8(in=in, load=c, out=outC, address=address[0..2]);
        RAM8(in=in, load=d, out=outD, address=address[0..2]);
        RAM8(in=in, load=e, out=outE, address=address[0..2]);
        RAM8(in=in, load=f, out=outF, address=address[0..2]);
        RAM8(in=in, load=g, out=outG, address=address[0..2]);
        RAM8(in=in, load=h, out=outH, address=address[0..2]);

        Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[3..5], out=out);
}
